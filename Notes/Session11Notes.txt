Constructors

Lets create a class like Person and create a object.

    class Person{
        String name;

        void printDetails(){
            System.out.println("name is=" + name);
        }
    }

    class Application{
        public static void main(String[] args){
            Person p1 = new Person();
            p1.printDetails();
        }
    }
When you run the above program you will see

name is=null
In above program we did not set name field to any value and for strings the java says null (which is saying nothing)

If you want see some name printing you need to say

    p1.name = "sai";
In this program what we are saying is p1 is Person and his name is "sai" ( it is done in 2 steps where first step is creating Person object and then setting the name in second step) If we forget setting the name then we have Person without name which does not make sense.

But what we wanted to say is p1 is Person with name "sai" ( In one step). We want to enforce this in the program that way you cannot create person without a name.

  class Person{
	
    String name;
	
	Person(String inputname){
		name = inputname;
	}

        void printDetails(){
            System.out.println("name is=" + name);
        }
    }

    class Application{
        public static void main(String[] args){
            Person p1 = new Person("sai");
            p1.printDetails();
        }
    }  
If you observe in Person class we created a method whose name is same as class name (Person) which takes one input which is of data type String and name inputname which is assigned to name.

In creating the person object now you have to do the following

    Person p1 = new Person("sai");
The method we have added has some unique characteristics

    Person(String  inputname){

    }
-It has the same name as class name (Person)
-It does not return anything (for normal method when they don't return anything you need to specify void but for this you cannot type anything)
-The parameters are just like any other methods where you can have 0 or multiple parameters.
-This is method is called when you are creating the object and hence it is called Constructor
